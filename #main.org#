#+Title 这是本项目的导航和主要文件


* 我的忽略目录
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~
/pdf资料/
/ui参考/
/可参考源代码/
/mycode/frombook/Debug/
/mycode/frombook/demo
/mycode/.metadata/

* TODO [#B] 按照课/本进行练习                                                   :linux:
SCHEDULED: <2019-12-13 五>
从这里打开[[file:~/%E5%AD%A6%E4%B9%A0/c_start/%E8%B5%84%E6%96%99/Liunx%E7%8E%AF%E5%A2%83C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AC%AC2%E7%89%88%E5%85%89%E7%9B%98/635543%20Linux%E7%8E%AF%E5%A2%83C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%20%E7%AC%AC2%E7%89%88.pdf][资料]]
test
p547
** DONE [#A] 看懂播放器的代码并记录问题
CLOSED: [2019-12-16 一 14:25] SCHEDULED: <2019-12-14 六>
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-16 一 14:25]
:END:
1. [ ] 组装盒
2. [ ] 对话框的活动区域
3. [ ]

** DONE [#A] 先判断整个项目没有问题                                            :linux:
CLOSED: [2019-12-27 五 10:43] SCHEDULED: <2019-12-16 一>
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-27 五 10:43]
:END:

*** DONE [#A] 解决第一次编译出现的问题：缺乏库文件支持
CLOSED: [2019-12-19 四 20:57] SCHEDULED: <2019-12-18 三>
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-19 四 20:57]
:END:


**** USELESS linux下Eclipse搭建C++\C开发环境
CLOSED: [2019-12-16 一 17:18]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-16 一 17:18] \\
  搜索到的内容 都是到安装成功为止  没有别的内容了
:END:
**** USEFULL [#A] 直接搜索问题:unresolved inclusion
CLOSED: [2019-12-17 二 16:19]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-17 二 16:19] \\
  解决了stdio的问题
:END:
<stdio.h>
#include <sys/stat.h>
#include <sys/types.h>

......
**** USELESS 搜索：unresolved inclusion <sys/stat.h>
CLOSED: [2019-12-16 一 22:11]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-16 一 22:11] \\
  搜索到的都是简单的sdblib  和之前的一样
:END:
**** DONE 直接通过添加的include 和绝对路径指明包的位置
CLOSED: [2019-12-16 一 22:23]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-16 一 22:23]
:END:
**** USEFULL 已安装下添加glib ./include/glib-2.0/glib.h
CLOSED: [2019-12-17 二 15:20]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-17 二 15:20] \\
  找到了 解决了
:END:

**** DONE glib头文件的问题
CLOSED: [2019-12-17 二 16:12]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-17 二 16:12]
:END:
1. [ ] 判断是否安装了glib
   #+BEGIN_SRC pkg-config --modversion  glib
Package glib was not found in the pkg-config search path.
Perhaps you should add the directory containing `glib.pc'
to the PKG_CONFIG_PATH environment variable
No package 'glib' found

   #+END_SRC
   #+BEGIN_SRC  dpkg -l | grep glib

ii  gir1.2-dbusmenu-glib-0.4:amd64                16.04.1+18.04.20171206-0ubuntu2              amd64        typelib file for libdbusmenu-glib4
ii  gir1.2-geocodeglib-1.0:amd64                  3.25.4.1-4ubuntu0.18.04.1                    amd64        introspection data for geocode-glib library
ii  gir1.2-glib-2.0:amd64                         1.56.1-1                                     amd64        Introspection data for GLib, GObject, Gio and GModule
ii  gir1.2-packagekitglib-1.0                     1.1.9-1ubuntu2.18.04.5                       amd64        GObject introspection data for the PackageKit GLib library
ii  gir1.2-snapd-1:amd64                          1.47-0ubuntu0.18.04.0                        amd64        Typelib file for libsnapd-glib1
ii  gir1.2-upowerglib-1.0:amd64                   0.99.7-2ubuntu0.18.04.1                      amd64        GObject introspection data for upower
ii  glib-networking:amd64                         2.56.0-1                                     amd64        network-related giomodules for GLib
ii  glib-networking-common                        2.56.0-1                                     all          network-related giomodules for GLib - data files
ii  glib-networking-services                      2.56.0-1                                     amd64        network-related giomodules for GLib - D-Bus services
ii  libaccounts-glib0:amd64                       1.23+17.04.20161104-0ubuntu1                 amd64        library for single signon
ii  libappstream-glib8:amd64                      0.7.7-2                                      amd64        GNOME library to access AppStream services
ii  libavahi-glib1:amd64                          0.7-3.1ubuntu1.2                             amd64        Avahi GLib integration library
ii  libdbus-glib-1-2:amd64                        0.110-2                                      amd64        deprecated library for D-Bus IPC
ii  libdbusmenu-glib4:amd64                       16.04.1+18.04.20171206-0ubuntu2              amd64        library for passing menus over DBus
ii  libgeocode-glib0:amd64                        3.25.4.1-4ubuntu0.18.04.1                    amd64        geocoding and reverse geocoding GLib library using Nominatim
ii  libglib-object-introspection-perl             0.044-2                                      amd64        Perl bindings for gobject-introspection libraries
ii  libglib-perl                                  3:1.326-1build1                              amd64        interface to the GLib and GObject libraries
ii  libglib2.0-0:amd64                            2.56.4-0ubuntu0.18.04.4                      amd64        GLib library of C routines
ii  libglib2.0-bin                                2.56.4-0ubuntu0.18.04.4                      amd64        Programs for the GLib library
ii  libglib2.0-cil                                2.12.40-2                                    amd64        CLI binding for the GLib utility library 2.12
ii  libglib2.0-cil-dev                            2.12.40-2                                    amd64        CLI binding for the GLib utility library 2.12
ii  libglib2.0-data                               2.56.4-0ubuntu0.18.04.4                      all          Common files for GLib library
ii  libglib2.0-dev:amd64                          2.56.4-0ubuntu0.18.04.4                      amd64        Development files for the GLib library
ii  libglib2.0-dev-bin                            2.56.4-0ubuntu0.18.04.4                      amd64        Development utilities for the GLib library
ii  libglib2.0-doc                                2.56.4-0ubuntu0.18.04.4                      all          Documentation files for the GLib library
ii  libjson-glib-1.0-0:amd64                      1.4.2-3                                      amd64        GLib JSON manipulation library
ii  libjson-glib-1.0-common                       1.4.2-3                                      all          GLib JSON manipulation library (common files)
ii  libmbim-glib4:amd64                           1.18.0-1~ubuntu18.04.1                       amd64        Support library to use the MBIM protocol
ii  libmm-glib0:amd64                             1.10.0-1~ubuntu18.04.2                       amd64        D-Bus service for managing modems - shared libraries
ii  libpackagekit-glib2-18:amd64                  1.1.9-1ubuntu2.18.04.5                       amd64        Library for accessing PackageKit using GLib
ii  libpoppler-glib8:amd64                        0.62.0-2ubuntu2.10                           amd64        PDF rendering library (GLib-based shared library)
ii  libpulse-mainloop-glib0:amd64                 1:11.1-1ubuntu7.2                            amd64        PulseAudio client libraries (glib support)
ii  libqmi-glib5:amd64                            1.22.0-1.2~ubuntu18.04.1                     amd64        Support library to use the Qualcomm MSM Interface (QMI) protocol
ii  libsnapd-glib1:amd64                          1.47-0ubuntu0.18.04.0                        amd64        GLib snapd library
ii  libupower-glib3:amd64                         0.99.7-2ubuntu0.18.04.1                      amd64        abstraction for power management - shared library


   #+END_SRC
**** USELESS 已安装下添加glib /usr/local/lib/为glib的安装路径
CLOSED: [2019-12-17 二 15:16]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-17 二 15:16] \\
  文件夹下没有相关文件
:END:
**** USEFULL 解决#include <sqlite3.h>
CLOSED: [2019-12-17 二 16:26]
:LOGBOOK:
- State "USEFULL"    from "DONE"       [2019-12-17 二 16:26] \\
  成功解决
- State "DONE"       from "TODO"       [2019-12-17 二 16:26]
:END:
sudo apt-get install libsqlite3-dev
**** USEFULL #include <id3tag.h>
CLOSED: [2019-12-17 二 16:28]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-17 二 16:28] \\
  解决了
:END:
$ sudo apt-get install  libid3tag*

**** DONE 解决gst.h :
CLOSED: [2019-12-17 二 15:35]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-17 二 15:35]
:END:
参考[[https://blog.csdn.net/fireroll/article/details/49126795][文档]]
1. [ ] gstreamer安装

**** DONE 解决medialib.h 并存的几个问题
CLOSED: [2019-12-18 三 21:19]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-18 三 21:19]
:END:

***** 详情
1. [ ] Problem description: Symbol 'gtk_main_quit' could not be
 resolved
        g_signal_connect(G_OBJECT(ui.winMain), "delete_event",
                        G_CALLBACK(gtk_main_quit), NULL);
2. [ ] Problem description: Type 'link_t' could not be resolved
        link_t mlink = {NULL, 0};
        link_t plink = {NULL, 0};
***** USELESS 添加全部.h
CLOSED: [2019-12-17 二 16:40]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-17 二 16:40] \\
  没什么用处 还是两个报错
:END:
#include "database.h"
#include "gettingstarted_common.h"
#include "main_core.h"
#include  "play.h"
#include "callback.h"
#include "  db.h     "
#include  " interface.h
#include "main.h "
#include "baby.h"

***** USELESS 百度一下几个关键词
CLOSED: [2019-12-17 二 20:55]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-17 二 20:55] \\
  根本百度不到相关的内容
:END:
1. [X] link_t 百度不到
2. [X] load_medialib
***** USELESS [#A] 怀疑是 数据库的使用方法不对 学习一下子数据库
CLOSED: [2019-12-18 三 19:35] SCHEDULED: <2019-12-17 二>
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-18 三 19:35] \\
  问题不在这里 根本没有发现出问题的相似结构
:END:
***** USEFULL 找到medialib文件 在11章节
CLOSED: [2019-12-18 三 21:19]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-18 三 21:19] \\
  主要文件内容就在这里
:END:
***** TODO 从下载的c文件里面搜索
***** TODO 怀疑是链表的问题 从课本前面寻找 link_t的定义
***** TODO 怀疑是链表的问题 从课本后面寻找 link_t的定义
***** USELESS 怀疑是链表的问题 从课本前面寻找 媒体库链表的定义 第八章
CLOSED: [2019-12-18 三 20:16]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-18 三 20:16] \\
  没找到相关内容
:END:
***** TODO 怀疑是链表的问题 从课本前面寻找 媒体库链表的定义
***** TODO 怀疑是链表的问题 从课本后面寻找 媒体库链表定义
***** TODO 怀疑是链表的问题 百度搜索
***** TODO 怀疑是链表的问题

***** TODO 怀疑是media的问题 loadmediaib(&mlink,0)
***** TODO 看看代码 学习一下 发现问题
***** TODO 从课本上看看"
link是啥 从哪里来的
***** TODO 找一找gtk_main_quit
***** TODO 从课本上寻找解决的方法解决medialib.h 的问题

**** USEFULL 方法一 添加include文件夹
CLOSED: [2019-12-16 一 17:23]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-16 一 17:23] \\
  解决了一部分库 不支持的问题 但是还剩下一部分
:END:

    unresolved inclusion: <stdio.h>

原因与解决：

这是c/c++标准库未设置所致。解决方法如下。

选中项目，依次操作：

右键单击 -> properties -> C/C++ General -> Paths and Symbols -> Add…  -> file system.

然后选择c/c++库的位置：/usr/include

如此再继续添加/usr/include/c++路径。确定后即可
**** DONE 先自己手动解决问题:Problem description: Symbol 'GTK_STOCK_OPEN' could
CLOSED: [2019-12-19 四 20:51]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-19 四 20:51]
:END:
***** USELESS not be resol  看看能不能搜索到
CLOSED: [2019-12-19 四 20:45]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-19 四 20:45] \\
  除了lcalback.c找不到 该关键词
  网上搜索的又都是相同的用法 不知所措
:END:
***** TODO 看看GTK_RESPONSE_CANCEL 是哪里定义的 到底有没有
***** USEFULL 把gtkstock.h 包含进来
CLOSED: [2019-12-19 四 20:51]
:LOGBOOK:
- State "USEFULL"    from "DONE"       [2019-12-19 四 20:51] \\
  解决了该问题
- State "DONE"       from "TODO"       [2019-12-19 四 20:51]
:END:
***** TODO 把错误的部分注释掉

**** DONE 解决大部分文件报错Problem description: Symbol 'MAX_FILE_LENGTH' could
CLOSED: [2019-12-19 四 20:56]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-19 四 20:56]
:END:
 not be resolved

***** USEFULL 将其改为path
CLOSED: [2019-12-19 四 20:56]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-19 四 20:56] \\
  暂时看不出问题
:END:
**** TODO 解决大部分文件报错
**** TODO 解决大部分文件报错
**** TODO 解决大部分文件报错
*** DONE [#A] 解决第二个报错:编译错误
CLOSED: [2019-12-19 四 21:28] SCHEDULED: <2019-12-19 四>
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-19 四 21:28]
:END:
Description	Resource	Path	Location	Type
fatal error: gtk/gtkaction.h: 没有那个文件或目录	from_book		line 38, external location: /usr/include/gtk-2.0/gtk/gtk.h	C/C++ Problem

打开发现 该文件的部分
在gtk2文件夹下发现了该文件
在gtk3下面找不到该文件了
是不是版本u冲突了
**** USEFULL 从执行语句寻找问题
CLOSED: [2019-12-19 四 21:28]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-19 四 21:28] \\
  初步解决
:END:
gcc -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/gstreamer-1.0 -I/usr/include -O0 -g3 -Wall -c -fmessage-length=0  `pkg-config --cflags gtk+-3.0` -MMD -MP -MF"callback.d" -MT"callback.o" -o "callback.o" "../callback.c"
In file included from ../callback.c:1:0:
/usr/include/gtk-2.0/gtk/gtk.h:38:10: fatal error: gtk/gtkaction.h: 没有那个文件或目录
 #include <gtk/gtkaction.h>
          ^~~~~~~~~~~~~~~~~
compilation terminated.
make: *** [callback.o] Error 1
subdir.mk:60: recipe for target 'callback.o' failed
***** USELESS 修改gtk版本
CLOSED: [2019-12-19 四 21:09]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-19 四 21:09] \\
  出现了新的问题   新的文件冲突
:END:
***** USEFULL 修改整个环境版本为2.0
CLOSED: [2019-12-19 四 21:28]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-19 四 21:28] \\
  看上去不再报相关错误了
:END:

1. [X]    pkg-config --cflags gtk+-2.0 > include.txt
2. [X] Project->Properties->C/C++ Build->Settings->GCC C Compiler->Miscellaneous->Other Flags->添加`pkg-config --cflags gtk+-2.0`
3. [ ] pkg-config --libs gtk+-2.0 > libs.txt
**** TODO 百度
**** TODO 怀疑是环境配置的不好
**** TODO 通过修改路径 是不是中文路径的问题

*** DONE [#A] 第三个问题sqlite3 *db = NULL;
CLOSED: [2019-12-19 四 22:02] SCHEDULED: <2019-12-19 四>
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-19 四 22:02]
:END:

**** USELESS 删除错误文本
CLOSED: [2019-12-19 四 21:58]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-19 四 21:58] \\
  毫无作用
:END:
**** USEFULL 分段
CLOSED: [2019-12-19 四 22:02]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-19 四 22:02] \\
  不报相关错误了
:END:
位置不对 修改好即可
**** TODO 百度

**** TODO 查看课本上的

**** TODO 了解数据库

*** DONE 解决文件dbuslisten
CLOSED: [2019-12-19 四 22:43]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-19 四 22:43]
:END:

**** USEFULL 从函数定义上了解和解决
CLOSED: [2019-12-19 四 22:43]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-19 四 22:43] \\
  目前看上去e没什么大问题了都变成了感叹号了
:END:

**** TODO 先从课本上了解和解决
*** DONE 解决文件dbussend
CLOSED: [2019-12-19 四 22:43]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-19 四 22:43]
:END:
*** DONE 解决文件：interface
CLOSED: [2019-12-20 五 16:20]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-20 五 16:20]
:END:
**** DONE 'GTK_WIDGET_SET_FLAGS(btPre, GTK_CAN_DEFAULT)'
CLOSED: [2019-12-20 五 14:47]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-20 五 14:47]
:END:
 could not be resolved

***** USEFULL 版本发生变化了 哈哈
CLOSED: [2019-12-20 五 14:47]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-20 五 14:47] \\
  不报错了
:END:

***** TODO 猜测是 flag的问题
1. [X] 项目里面 和这里不想关
2. [ ] include里面

**** DONE vbox action_area
CLOSED: [2019-12-20 五 16:19]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-20 五 16:19]
:END:

***** USEFULL 怀疑还是版本问题
CLOSED: [2019-12-20 五 16:19]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-20 五 16:19] \\
  果然是版本问题  直接删除添加错误的include文件就好了  哈哈
:END:
因为从例子的执行来看就是如此
***** TODO object 是啥

****** USELESS 课本
CLOSED: [2019-12-20 五 15:57]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-20 五 15:57] \\
  内容太少了
:END:

***** TODO gtkGTK_DIALOG

****** TODO 百度DIALOG (diaPlaylist)->vbox;

***** TODO 更详细的了解
*** DONE 直接使用makefile编译
CLOSED: [2019-12-27 五 10:16]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-27 五 10:16]
:END:
**** USEFULL 第一次尝试
CLOSED: [2019-12-27 五 10:16]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-27 五 10:16] \\
  能够在命令行下使用shell运行了
:END:
1. [X] interface.c:(.text+0x3417)：对‘id3_file_open’未定义的引用
2. [ ] interface.c:(.text+0x3441)：对‘id3_file_tag’未定义的引用
3. [ ] interface.c:(.text+0x345d)：对‘id3_tag_findframe’未定义的引用
4. [ ] main_core.c:(.text+0xbd)：对‘general_volume’未定义的引用
5. [ ] main_core.c:(.text+0xca)：对‘general_mute’未定义的引用
6. [ ] main_core.c:(.text+0x14a)：对‘request_volume’未定义的引用
*** USEFULL 快速解决
CLOSED: [2019-12-27 五 10:42]
:LOGBOOK:
- State "USEFULL"    from "DONE"       [2019-12-27 五 10:43] \\
  能够使用makefile编译了
- State "DONE"       from "TODO"       [2019-12-27 五 10:42]
:END:
**** TODO      @echo 'Building target: $@' 报错的结局
***** TODO 添加两个东西
Project->Properties->C/C++ Build->Settings->GCC C++ Linker->Libraries
1. [X] 在Libraries(-l)中添加pthread即可
2. [-] 在Libraries search path(-L)中添加crypto即可
   1. [X] 做了一点 但是不知道效果如何
3. [ ] 但是Libraries search path(-L)中要填写的不是路径么？那crypto的路径是什么？
****** TODO 解决找不到 -lcrypto	frombook		        C/C++ Problem


*** TODO 解决未定义的问题
**** DONE 解决几个函数问题:interface.c
CLOSED: [2019-12-23 一 20:40]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-23 一 20:40]
:END:
**** TODO hazy_find
***** TODO 课本
****** TODO string章
****** TODO 从本章开始
****** TODO 从头文件开始找起
**** DONE 解决几个函数问题:maincore.c
CLOSED: [2019-12-23 一 22:28]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-23 一 22:28]
:END:

**** DONE 已经包含头文件 还是显示未定义
CLOSED: [2019-12-23 一 20:34]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-23 一 20:34]
:END:
***** TODO 缺乏头文件
:LOGBOOK:
- State "NEXT"       from "DONE"       [2019-12-23 一 20:34]
- State "DONE"       from "TODO"       [2019-12-23 一 20:33]
:END:
1. [ ] treeClass_data(mlink, data);
2. [ ] treeMedialib_data(mlink, data);
3. [ ] treePlaylist_data(plink, data);
4. [ ] medialib_ui_show(mlink, data);
5. [ ] medialib_add(mlink, data);
6. [ ] medialib_add_dir(mlink, data);
7. [ ] medialib_del_all(mlink, data);
8. [ ] medialib_search(mlink, data);
9. [ ] medialib_sendto(plink, data);
10. [ ] medialib_find(mlink, data);
11. [ ] playlist_ui_show(plink, data);
12. [ ] playlist_add(plink, data);
13. [ ] playlist_add_dir(plink, data);
14. [ ] playlist_open(plink, data);
15. [ ] playlist_save(plink, data);
16. [ ] playlist_del_all(plink, data);
17. [ ] playlist_del(plink, data);
***** TODO 百度
***** TODO 检查头文件是否有相互包含的关系，会导致递归调用，出现报错
***** TODO 重写makefile
**** TODO 百度对‘medialib_sendto’未定义的引用

1. [ ] include 的版本冲突
2. [ ] include没有包含进来
3. [ ]
*** TODO 解决编译失败的问题
**** TODO collect2: error: ld returned 1 exit status

***** USEFULL 是不是包的问题 添加更多
CLOSED: [2019-12-20 五 18:31]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-20 五 18:31] \\
  能够减少home/work/programme/mp3player/mycode/frombook/Debug/../main.c:50：对‘link_del_all’未定义的引用
:END:
***** TODO 搜索


1. 编译成功的例子在后台执行，有时一闪而过，如果再次build ，则会提示上述错误。

解决方法：打开任务管理器，找到相应的exe进程，关闭即可；  或者直接关闭IDE。



2.没有编译成功的情况下，最常见情况是程序本身需要include的头文件被遗漏了

解决方法：细心查找基类所用的头文件，include之后即可。



3..h文件中相关的函数在cpp文件中没有定义，或者说函数的声明(.h中)与定义(.cpp中)不一致

解决方法：查找遗漏的函数，根据需要，具体的定义。将函数名修改一致

**** TODO 看不懂 先从命令行编译,
gcc  -o "frombook"  ./baby.c ./callback.c ./db.c ./interface.c ./main.c ./main_core.c ./play.c   -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lfontconfig -lfreetype

gcc  -o "frombook"  ./baby.o ./callback.o ./db.o ./interface.o ./main.o ./main_core.o ./play.o   -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lfontconfig -lfreetype

**** TODO 搜索：frombook: $(OBJS) $(USER_OBJS) 报错
**** TODO 怀疑在frombook: $(OBJS) $(USER_OBJS)
**** TODO
**** TODO 修改makefile
**** TODO 搜索Description	Resource	Path	Location	Type
recipe for target 'frombook' failed	makefile	/frombook/Debug	line 29	C/C++ Problem
***** USELESS 是不是没编译完？
CLOSED: [2019-12-20 五 18:10]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-20 五 18:10] \\
  都编译完了问题不在这里
:END:
/baby.o ./callback.o ./db.o ./interface.o ./main.o ./main_core.o ./play.o

baby.c  callback.c  db.c  interface.c  main.c  main_core.c  mainrc  play.c
**** USELESS 修改为纯英文路径
CLOSED: [2019-12-20 五 18:03]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-20 五 18:03] \\
  毫无作用
:END:
*** DONE 解决文件gettingstart
CLOSED: [2019-12-20 五 20:48]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-20 五 20:48]
:END:
**** WAITING 先删除两个文件 可能用不上
:LOGBOOK:
- State "WAITING"    from "TODO"       [2019-12-20 五 14:38] \\
  等待判定效果
:END:
**** TODO 从课本上开始理解
*** TODO make 文件的制作

*** TODO 解决问题： no link 结构体

*** TODO 解决第一次编译出现的问题:

** TODO 添加功能
*** TODO 登录
: 将g登录安装在最首行
**** TODO 查看最首行的安排位置和逻辑
**** TODO 添加
*** TODO 有部分代码是注销了的 加上 
: 直接搜索TODO
*** TODO 2. [ ] 更加清晰 的页面导航 不断尝试不同方式
   1. [ ] 思维导图：全部思维导图
   2. [ ] 引导 就像导游 逐步引入
*** TODO 3. [ ] 阐述行业痛点，行业痛点不仅仅是罗列问题，更需要表现我们如何解决问题，点明我们在行业中的切入点。
*** TODO 4. 如何更好的发掘音乐？
   1. [ ] 文本+爬虫 分析 作者的相似度
   2. [ ] 音乐频率中发现有趣的东西
*** TODO 5. 使用更加丰富的记录方法 解决用户 老是听到相同音乐的难点
   1. [ ] 能够从歌单 电台 播放列表中 手动剥离 近期播放次数过多的音乐
*** TODO 6. [ ] 节省空间
   1. 最小化的时候 允许 将 解码播放与wedget 分离开来
*** TODO 7. 支持音乐创作
   1. [ ] 当然现在只不过是增加了变速的功能罢了
   2. [ ] 使用混音  截取 创造自己完全不熟悉的音乐  提升g多样
** TODO 重构部分代码
: 主要是能写出来 保证自己有架构项目 和实现重要模块的能力

*** TODO UI设计

*** TODO 数据库的使用

** TODO [#B] 按照自己 的流程进行编写                                           :linux:
SCHEDULED: <2019-12-16 一>
: 就是照着 源代码 打造自己的作品 不要想着弄明白
1. [ ] 会查 会看例子(函数手册)
2. [ ] 能实现效果
3. 代码都在frombook下
*** DONE 参考文件
CLOSED: [2019-12-16 一 15:16]
:LOGBOOK:
- State "DONE"       from "DONE"       [2019-12-16 一 15:16]
- State "DONE"       from "TODO"       [2019-12-16 一 15:16]
:END:
1. [X] 图片
2. [X] 代码

*** TODO 为erro添加message
g_print("消息已收到，但有错误提示: %s\n", error);
*** TODO 音量控制对话框
1. [ ] 弄明白怎么 写的  而不是简单抄写一遍
2. [ ] 重要因素的模板




*** TODO 播放列表对话框
1. [ ] 弄明白怎么 写的
2. [ ] 重要因素的模板
*** TODO 媒体库对话框
1. [ ] 弄明白怎么 写的
2. [ ] 重要因素的模板
*** TODO 播放控制模块实现
1. [ ] 弄明白怎么 写的
2. [ ] 重要因素的模板
*** TODO  系统集成
1. [ ] 弄明白怎么 写的
2. [ ] 重要因素的模板
*** TODO 主程序文件的实现
1. [ ] 弄明白怎么 写的
2. [ ] 重要因素的模板
*** TODO 媒体库功能的集成
1. [ ] 弄明白怎么 写的
2. [ ] 重要因素的模板
*** TODO 播放列表功能的集成
1. [ ] 弄明白怎么 写的
2. [ ] 重要因素的模板
*** TODO 播放控制模块的集成
1. [ ] 弄明白怎么 写的
2. [ ] 重要因素的模板
*** TODO 添加自己的内容
1. [ ] 弄明白怎么 写的
2. [ ] 重要因素的模板
*** TODO 解决几个关键问题
1. [ ] 模板
2. [ ] 方便快速的找到对应的代码
   注意写注释 文
3. [ ] 参考ui：网易云音乐
** WAITING 跑起来第一个部分:音量控制部分
:LOGBOOK:
- State "WAITING"    from "TODO"       [2019-12-14 六 11:21] \\
  出现了不能运行的错误  不知道是不是文件没有写全 数据出现了 冲突 等到内容都写完之后再运行吧
:END:

*** USEFULL 找到源代码？
CLOSED: [2019-12-13 五 21:11]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-13 五 21:11] \\
  找到了源代码 一定能看懂
:END:

**** USELESS 官网
CLOSED: [2019-12-13 五 16:21]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-13 五 16:21] \\
  官网链接已经掉了
:END:
https://yun.baidu.com/s/1lBYGg
https://yun.baidu.com/s/1qW11wNa
**** USEFULL 百度云
CLOSED: [2019-12-13 五 21:10]
:LOGBOOK:
- State "USEFULL"    from "TODO"       [2019-12-13 五 21:10] \\
  找到了两个资料 其中一个是光盘资源 能使用
:END:
**** TODO 百度：c 社区
**** USELESS 百度：linuxc环境
CLOSED: [2019-12-13 五 16:23]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2019-12-13 五 16:23] \\
  找不到
:END:

*** TODO 强行跑起来 边看 边想 逐渐明白
*** TODO 回顾gui的编写方法 自己思考
** TODO 报错：#include <gtk-2.0/gtk/gtk.h>
#include <glib-2.0/glib.h>Building file: ../callback.c
Invoking: GCC C Compiler
gcc -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gio-unix-2.0/ -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -O0 -g3 -Wall -c -fmessage-length=0  `pkg-config --cflags gtk+-3.0` -MMD -MP -MF"callback.d" -MT"callback.o" -o "callback.o" "../callback.c"
../callback.c:12:1: error: expected identifier or ‘(’ before ‘}’ token
 }
 ^
In file included from ../callback.c:13:0:
/usr/include/gtk-2.0/gtk/gtk.h:38:10: fatal error: gtk/gtkaction.h: 没有那个文件或目录
 #include <gtk/gtkaction.h>
          ^~~~~~~~~~~~~~~~~
compilation terminated.
make: *** [callback.o] Error 1
subdir.mk:27: recipe for target 'callback.o' failed
*** TODO 先继续写 全写完了再说吧
*** TODO 先解决expected identifier or ( before } token
**** TODO 先处理interface.h
**** TODO 当做宏定义问题进行处理
**** TODO 查看哪里编写出现了问题？
*** TODO 暂时注释掉
**** 注释掉之后出现新错误
gcc -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gio-unix-2.0/ -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -O0 -g3 -Wall -c -fmessage-length=0  `pkg-config --cflags gtk+-3.0` -MMD -MP -MF"callback.d" -MT"callback.o" -o "callback.o" "../callback.c"
../callback.c:12:1: error: expected identifier or ‘(’ before ‘}’ token
 }

*** TODO eclipse 多版本编译
*** TODO 修改头文件的版本
*** TODO 修改编译器的版本

** TODO 解决疑问

*** TODO 是不是没有按钮就要屏蔽活动区域？

**** TODO 自己写个例子看看屏蔽与否

**** TODO 获得更加详细资料

**** TODO 看看相似的历程
* TODO 可行性分析
** TODO 驱动分析[0/3]
1. [ ] 反馈及时吗
2. [ ] 对我有什么好处吗？
   1. [ ] 设计和成果？
      1.
   2. [ ] 成就感?
   3. [ ] 帮助别人了？
3. [ ] 其他发展
** TODO 难点分析，可能会遇到的困难[0/3]
1. [ ] 分析出三个难点
   | 内容 | 程序 |
   |------+------|
   |      |      |
2. [ ] 违背最主要的事情了吗？ 如果不是最主要的，一定会被放弃的
3. [ ] 补全下面的内容
   1. [ ] 判断会被放弃吗？填一下下表
      1. [ ] 好处不够大会被放弃
      2. [ ] 实现难度大也会被放弃
         1. [ ] 时间长 跨度长了就会失去兴趣，
            1. [ ] 估算时间：
               | 耗费小时 | 天数跨度 |
               |----------+----------|
               |          |          |
         2. [ ] 资源多
   2. [ ] 信念坚定吗？
   3. [ ] 项目的实现需要投入什么？
      1. [ ] 时间: h
         1. [ ] 能熬到那个时候吗？怕还没等到出结果就放弃了
      2. [ ] 资源

** TODO 竞争力分析[0/1]
: 有核心的竞争力吗
1. [ ] 列出四个竞争力:
   1.
* DONE 项目简介[1/1]
CLOSED: [2019-12-10 二 20:23]
:LOGBOOK:
- State "DONE"       from "TODO"       [2019-12-10 二 20:23]
:END:
: 描述项目定位，明确项目目的
1. [X] 一句话介绍项目是什么 一个我喜欢的音乐播放器
* TODO 项目目的[0/5]

1. [ ] 描述项目所处行业规模及增速
   1. 反正版权都在大家那里  主要资源还是来自网页夺取
   2.
2. [ ] 更加清晰 的页面导航 不断尝试不同方式
   1. [ ] 思维导图：全部思维导图
   2. [ ] 引导 就像导游 逐步引入
3. [ ] 阐述行业痛点，行业痛点不仅仅是罗列问题，更需要表现我们如何解决问题，点明我们在行业中的切入点。
   1. 如何更好的发掘音乐？
      1. [ ] 文本+爬虫 分析 作者的相似度
      2. [ ] 音乐频率中发现有趣的东西
   2. 使用更加丰富的记录方法 解决用户 老是听到相同音乐的难点
      1. [ ] 能够从歌单 电台 播放列表中 手动剥离 近期播放次数过多的音乐
   3. [ ] 节省空间
      1. 最小化的时候 允许 将 解码播放与wedget 分离开来
   4. [ ] 支持音乐创作
      1. [ ] 当然现在只不过是增加了变速的功能罢了
      2. [ ] 使用混音  截取 创造自己完全不熟悉的音乐  提升g多样性
4. [ ] 创造性在哪里 突破在哪里
   1. [ ] 没什么创造性 主要是为了练习
5. [ ] 对大量使用者的影响和益处：


* TODO 竞争格局:竞品分析[/]
: 分析项目的竞争对手，
1. [ ] 这里对竞争对手要有准确的定位，
2. [ ] 要对竞争对手有深刻的了解，使用xmind的 比较进行对比
   1. [ ] 简要点出它们的优缺点，
   2. [ ] 并罗列我们自身项目的优点。
3. [ ] 通过对比，使自项目更清晰。
   1. [ ] 通过对比挖掘自身的框架
* TODO 产品开发[/]
** TODO 产品规划
** TODO 现状
** TODO 消耗资料
** TODO 开发步骤
* TODO 探索盈利模式[/]
主要展示自己的核心商业模式和盈利模式，最好能用逻辑或思维图展示。
* TODO 探索运营方案[/]
主要列一些项目运营数据，像电商类项目，主要列下交易量、用户数、复购率等等。
* TODO 总结内容[/]
介绍团队中最主要的几个成员，写下他们的从业经验。
* TODO 后续发展计划[0/6]
列了近一年的目标，最好也写一下如何实现目标的一些规划。

** TODO 项目模板提取
** TODO 设计可能的100个方案 现有程序的100个用法
1. [ ] 内容输出
2. [ ] 微盘分享
3. [ ] 微博
4. [ ] 公众号
5. [ ] 知乎
6. [ ] 专业论坛
7. [ ] 同好群
8. [ ] qq群
   1. [ ] 从音乐爱好群开始
   2. [ ] 从其他喜欢折腾的群开始
9. [ ] 论坛

** TODO 增强易用性

** TODO 整理和学习
1. [ ] 使用流程图 分析代码
2. [ ] 如何加快流程



** TODO 从规划到代码的工具
: 使用程序 快速解决多个函数调用 实现更快的程序建立

*** TODO 调用相似模板的程序

*** TODO 调用不同模板的程序

* TODO 记录知识
1. [ ] .h 文件中声明
2. [ ] .interface 中声明通用结构体
3. [ ] callback保存回调函数（signal 函数）
4. [ ] include “”是自己写的
5. [ ]



** 变量的错误
1. 文件未包含
   1. [ ] 通过grep找到
2. 变量在版本上发生了变化
   1. [ ] 但是可以通过找相似发现

** 对话框
1、模式对话框的特点是：
a)在关闭模式对话框前，无法操作背景窗口，除非自身就是主窗口；
b)使用CDialog::DoModal函数弹出模式对话框，该函数执行过程是阻塞函数；
c)因此在栈内或者堆内申请对话框类的对象都可以的，申请栈内变量开发和运行效率高一些。
2、非模式对话框的特点是：
a)在非模式对话框运行时可以操作背景窗口；

b)使用CDialog::Create函数和CWnd::ShowWindow弹出模式对话框，该函数执行过程是非阻塞函数；

c)不能在栈

* 参考资料

————————————————
版权声明：本文为CSDN博主「爱计算机的彭涛」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/huanhuanxiaoxiao/article/details/80905198
